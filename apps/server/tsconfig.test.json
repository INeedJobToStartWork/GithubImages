{
	"$schema": "http://json.schemastore.org/tsconfig",
	"compilerOptions": {
		"esModuleInterop": true,
		"jsx": "react",
		"outDir": "./dist",
		"baseUrl": "src",
		"paths": {
			"@/*": ["*", "*/index.ts", "*.ts"],
			"@env": ["utils/envVariables.ts"],
			"@app": ["app.ts"]
		},
		"stripInternal": true,
		"plugins": [
			{
				"transform": "@nestia/core/lib/transform",
				/**
				 * Validate request body.
				 *
				 *   - "assert": Use typia.assert() function
				 *   - "is": Use typia.is() function
				 *   - "validate": Use typia.validate() function
				 *   - "assertEquals": Use typia.assertEquals() function
				 *   - "equals": Use typia.equals() function
				 *   - "validateEquals": Use typia.validateEquals() function
				 */
				"validate": "validateEquals",
				/**
				 * Validate JSON typed response body.
				 *
				 *   - "assert": Use typia.assertStringify() function
				 *   - "is": Use typia.isStringify() function
				 *   - "validate": Use typia.validateStringify() function
				 *   - "validate.log": typia.validateStringify(), but do not throw and just log it
				 *   - "stringify": Use typia.stringify() function, but dangerous
				 *   - null: Just use JSON.stringify() function, without boosting
				 */
				"stringify": "assert"
			},
			{
				"transform": "@nestia/sdk/lib/transform"
			},
			{
				"transform": "typia/lib/transform"
			}
		],
		"preserveSymlinks": true,
		"strict": true
	},
	"extends": "@ineedj/tsconfig/base.json"
}
